core:
* add a way to cleanly stop the bot from system (twisted has something in a reactor)
* maybe add channel-name to log-messages
* new callback "command"
* seperate callbacks for query and channel messages
* priorities of callbacks for modules (module with the highest priority will get the callback first)
* return value for chatmod callbacks, which can be NO_FURTHER_PROCESSING or maybe MSG_CHANGED(newmsg) or something like this.
** In this case, logMod should get the highest priorty for right logging, and some mod could alter the message, and pass it to the kiMod
* get modechars and channeltypes from servergreeting
* ability not to *load* modules for certain networks
* don't use global variables in Bot (classes, logging, modechars, ..)
* put the stuff, which is now plain in otfbot.py in a class
* limit the commands processed (maybe put some users temporarily on ignore) and limit the lines sent per minute
modules:
* extent modules-api
* http://peak.telecommunity.com/DevCenter/PythonEggs
logMod:
* make logfilerotation working (should work, if needed more exactly use scheduler)
rdfMod:
* use real parser(?)
* decrease the interval between two hits, if a change was found, increase it, if nothing was changed.
* load the Feeds in a central place, so the Feed only needs to be loaded once f√ºr two(or more) channels
kiMod:
* limit brainsize (maybe requires hacking the megahalpython-binding)


commandsMod:
2007-01-05 23:30:50,482 insiderz   __init__           ERROR    File "./otfbot.py", line 355, in privmsg
2007-01-05 23:30:50,483 insiderz   __init__           ERROR        mod.msg(user, channel, msg)
2007-01-05 23:30:50,483 insiderz   __init__           ERROR    File "/media/crypt/allo/otfbot/commandsMod.py", line 44, in msg
2007-01-05 23:30:50,484 insiderz   __init__           ERROR        if self.commandChar.has_key(channel) and msg[0] == self.commandChar[channel]:
(when another module uses sendmsg with wrong encoding)
Fix in SVN 64
